FORMAT: 1A

# Changelog

  - <2021-12-27 Mon> :: POST /v1/proof -> add `extra` -> `signature`
  - <2021-12-21 Tue> :: POST /v1/proof/payload -> add `extra`
  - <2021-12-20 Mon> :: GET /v1/proof -> structure changed to support multi Persona response
  - <2021-12-17 Fri> :: POST /v1/proof -> add `extra`
  - <2021-12-12 Sun> :: POST /proof/payload -> add post content
  - <2021-11-25 Thu> :: init draft

# General

## Structure

All requests and responses should be `Content-Type: application/json`.

## Supported platforms for proofing

See [README.md](./README.md)

## Post struct placeholders

| placeholders   | Should be replaced to    | Sample                                                                                     |
| `%SIG_BASE64%` | Base64-encoded signature | `1uZDzxZ6wae+IaF4BgJXWAWC9e/nxbkdC0xp+xRLz1FqeghynyW+SQnGQygdgQYLTLfXqq03nyFQJU0GidQ/3QA=` |

# Group Proof

## Query a proof payload to signature and to post [POST /v1/proof/payload]

+ Request (application/json)

  + Attributes (object)

    + action (string, required) - Action (`create` / `delete`)
    + platform (string, required) - Target platform. See table above for all available platforms. See table in [README.md](./README.md) for all available values.
    + identity (string, required) - Identity in target platform to proof. Usually a "username" or "screen name". See [README.md](./README.md).
    + public_key (string, required) - Public key of NextID Persona to connect to. Should be secp256k1 curve (for now), 65-bytes or 33-bytes long (uncompressed / compressed) and stringified into hex form (`/^0x[0-9a-f]{65,130}$/`).

  + Body

        {
          "action": "create",
          "platform": "twitter",
          "identity": "my_twitter_screen_name",
          "public_key": "0x04c7cacde73af939c35d527b34e0556ea84bab27e6c0ed7c6c59be70f6d2db59c206b23529977117dc8a5d61fa848f94950422b79d1c142bcf623862e49f9e6575"
        }

+ Response 200 (application/json)

  + Attributes (object)

    + post_content (string, required) - Post to let user send / save to target platform. Placeholders should be replaced by frontend / client. See table above.
    + sign_payload (string, required) - Raw string to be sent to `personal_sign`

  + Body

        {
          "post_content": "Prove myself: I'm 0x028c3cda474361179d653c41a62f6bbb07265d535121e19aedf660da2924d0b1e3 on NextID. Signature: %SIG_BASE64%",
          "sign_payload": "{\"action\":\"add\",\"identity\":\"my_twitter_screen_name\",\"platform\":\"twitter\",\"prev\":null}"
        }

## Create a proof modification [POST /v1/proof]

+ Request (application/json)

  + Attributes (object)

    + action (string, required) - Action (`create` / `delete`)
    + platform (string, required) - Target platform. See table above for all available platforms. See table above for all available values.
    + identity (string, required) - Identity in target platform to proof. Usually a "username" or "screen name". See [README.md](./README.md).
    + proof_location (string, optional) - Location where public-accessable proof post is set. See [README.md](./README.md).
    + public_key (string, required) - Public key of NextID Persona to connect to. Should be secp256k1 curve (for now), 65-bytes or 33-bytes long (uncompressed / compressed) and stringified into hex form (`/^0x[0-9a-f]{65,130}$/`).
    + extra (object, optional) - Extra info for specific platform needed.
      + wallet_signature (string, optional) - (needed for `platform: ethereum`) Signature signed by ETH wallet (w/ same sign payload), BASE64-ed.
      + signature (string, optional) - (needed for `platform: ethereum`) Signature signed by Persona private key (w/ same sign payload), BASE64-ed.

  + Body

        {
          "action": "create",
          "platform": "twitter",
          "identity": "my_twitter_screen_name",
          "proof_location": "1415362679095635970",
          "public_key": "0x04c7cacde73af939c35d527b34e0556ea84bab27e6c0ed7c6c59be70f6d2db59c206b23529977117dc8a5d61fa848f94950422b79d1c142bcf623862e49f9e6575",
          "extra": {}
        }

+ Response 201 (application/json)

Request submitted successfully. No error happened.

+ Response 400 (application/json)

Request failed.

    + Attributes

      + message (string, required) - Contains some error info for user.

    + Body

        {
           "message": "Tweet author is not the same as given identity."
        }

## Query an existed binding [GET /v1/proof]

+ Request

    + Parameters

      + platform (string, required) - Proof platform
      + identity (string, required) - Identity on target platform

    + Example

      `GET /proof?platform=twitter&identity=my_twitter_screen_name`

+ Response 200 (application/json)

  + Attributes

    + ids (array[object], required) - All IDs found. Will be empty array if not found.
      + persona (string, required) - Persona public key
      + proofs (array[object], required) - All proofs under this persona
        + platform (string, required) - Platform
        + identity (string, required) - Identity on that platform

  + Body

        {
          "ids": [{
            "persona": "0x04c7cacde73af939c35d527b34e0556ea84bab27e6c0ed7c6c59be70f6d2db59c206b23529977117dc8a5d61fa848f94950422b79d1c142bcf623862e49f9e6575",
            "proofs": [{
               "platform": "twitter",
               "identity": "my_twitter_screen_name"
             }, {
               "platform": "facebook",
               "identity": "my_facebook_username"
             }]
          }, {
            "persona": "0xANOTHER",
            "proofs": [{
              "platform": "ethereum",
              "identity": "0x114514......"
            }]
          }]
        }
